#include <iostream>
// Тази библиотека ви е строго забранено да я ползвате,
// освен ако не е казано изрично, че можете.
#include <vector>
// Тази библиотека няма да ви е разрешена освен, ако не е опоменато.
// За базови сортиращи алгоритми трябва да сте говорили по УП.
#include <algorithm> //sort
#include <iomanip> //setprecision
// Липсва cmath библиотеката!

//Задача 1
struct Point {
   int x, y;
};

struct Triangle {
   Point p1, p2, p3;

    // За методи все още не е говорено, но е добре направено.
   double area() const {
        // Тази формула я научавам от тук. Умно нещо е алгебрата!
       return std::abs((p1.x * (p2.y - p3.y) + p2.x * (p3.y - p1.y) + p3.x * (p1.y - p2.y)) / 2.0);
   }
};

int main() {
   int N;
   std::cin >> N;

    // Нямаш валидация за N. Това предизвиква неудобни въпроси от рода на:
    // Какво става, ако въведа 0?
    // Какво става, ако въведа отрицателна стойност?
    // По-добре е размерът ти да е unsigned число.
    // За предпочитане size_t, тъй като този тип се използва за размери и индексация на колекции.

   std::vector<Triangle> triangles(N);
   std::vector<double> areas;

   for (int i = 0; i < N; i++) {
       std::cin >> triangles[i].p1.x >> triangles[i].p1.y
                >> triangles[i].p2.x >> triangles[i].p2.y
                >> triangles[i].p3.x >> triangles[i].p3.y;

       areas.push_back(triangles[i].area());
   }

    // Това е извън условието.
    // В този курс няма да се учим как да правим състезателни задачи, а как да правим големи проекти.
    // В състезателна обстановка се грижим само входа и изхода да съвпадат с условието на задачата,
    // без да ни интересува, какво се случва в програмата.
    // Тук обаче ни интересува и вътре какво се случва. Затова когато в условието се иска да сортираме
    // триъгълниците по тяхното лице, означава да сортираме самите триъгълници, а не само техните лица.
    // Това е същото като да ти кажа вземи тези шишета и ги сортирай по височина и ти да ми върнеш лист,
    // на който си написал височините им в сортиран ред.
   std::sort(areas.begin(), areas.end());

    // Значи тук си използвал size_t за размера, но не и горе?
   size_t areasSize = areas.size();
   //Следващия ред е написан с помощта на chatGPT
   std::cout << std::fixed << std::setprecision(1);
   for (size_t i = 0; i < areasSize; i++) {
       std::cout << areas[i];
       if (i < areasSize - 1) {
           std::cout << " ";
       }
   }
   std::cout << std::endl;

   return 0;
}